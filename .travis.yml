# See j2objc-gradle's .travis.yml for explanations.

language: objective-c
os: osx
# Add a TEST_DIR=[directory] row for each library (or group of libraries) to test
# Each will be run as an independent, hermetic test (in parallel when resources permit)
# on Traivs.
env:
  - TEST_DIR=com.google.code.gson-gson
  - TEST_DIR=org.joda-joda-convert
  - TEST_DIR=joda-time-joda-time
  - TEST_DIR=org.joda-joda-primitives
  - TEST_DIR=org.apache.commons-commons-lang3

matrix:
  allow_failures:
    # Blocked on https://github.com/JodaOrg/joda-convert/issues/7
    - env: TEST_DIR=org.joda-joda-convert
    # Blocked on https://github.com/JodaOrg/joda-convert/issues/7
    - env: TEST_DIR=joda-time-joda-time

branches:
  only:
    # master branch's j2objc-gradle submodule should track
    # only the latest production release of j2objc-gradle.
    # For now it tracks a particular unreleased commit because v0.5.0-alpha
    # must be released for depedency features to work.
    # Maintainers must manually update submodule to the latest release.
    - master
    # pluginHead branch is used to always test the latest
    # HEAD of the j2objc-gradle repository.  They are automatically
    # configured below.
    - pluginHead
    - /^release.*$/
    - /^v[0-9].*$/

sudo: false

install:
  - export TERM=dumb
  - env
  - xcrun clang -v
  - /usr/libexec/java_home -v 1.7 -F -V
  - java -Xmx32m -version && javac -J-Xmx32m -version
  - pushd j2objc-gradle
  - echo For branch $TRAVIS_BRANCH
  # Update the plugin submodule to latest HEAD if in the appropriate branch
  - if [[ $TRAVIS_BRANCH == pluginHead ]]; then git pull origin master; fi
  - ./gradlew wrapper
  - ./gradlew dependencies
  # In this repo, building of the j2objc-gradle plugin is just preperation.
  - ./gradlew build
  - popd
  - pushd libraryBuilds
  # Downloads and configures j2objc distribution.
  - ./prep.sh

# Note the install prep leaves us in the libraryBuilds directory.
script:
  - ./run-test.sh $TEST_DIR
